package com.revature.dao;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.revature.beans.User;

/**
 * Implementation of UserDAO that reads/writes to a relational database
 */


public class UserDaoDB implements UserDao {
	public static Connection conec;
	public static Statement stat;
	public static PreparedStatement prestat;
	public static ResultSet rels;
	
	
	public User addUser(User user) {
		// TODO Auto-generated method stub
		
		
		try {
			
				conec = DriverManager.getConnection("jdbc:mysql://localhost:3306/revature", "root", "Okaythen12wow");
				stat = conec.createStatement();
				
				//rels = stat.executeQuery("select * from users");
				
				//String exU = rels.getString("username");
				
				String sql = "INSERT INTO users VALUES ("+user.getFirstName()+" ,"+user.getLastName()+","+user.getUsername()+","+user.getPassword()+","+user.getUserType()+")";
				stat.executeUpdate(sql);
				System.out.println("New user added");  
				
				//String sql = "insert into users "
				//		+"(first_name,last_name,username,password,usertype)"
				//		+values(user.getFirstName(),user.getLastName(),user.getUsername(),,user.getUserType());
				
				List<User> exis = getAllUsers();
				// check to make sure User user(whats passed) is not in DB already
				//if it is return error if not write the user to the db
				
			/*	for each user in exis if the username of that user equals  
			 * the username of the new user print the error other wise do notihng then append the new user to the database
			 * 
			 * for (int i = 0 ;i<exis.size(); i++)
					if getUsername(exis.get(i)) ==
					System.out.println("Sorry you cannot add a duplicate user");*/
				//prepair statement query insert into employee (name,email) values (?,?)
				 ;
				
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
			
		
		return user;
		}
	

	public User getUser(Integer userId) {
		// TODO Auto-generated method stub
		User u = null;
		
		try {conec = DriverManager.getConnection("jdbc:mysql://localhost:3306/revature", "root", "Okaythen12wow");
		
		stat = conec.createStatement();
		
			rels = stat.executeQuery("select id from users");
			while ( rels.next())
			 if (rels.getInt("id") == userId) {
			u.setId(rels.getInt("id"));
			u.setFirstName(rels.getString("first_name"));
			u.setLastName(rels.getString("last_name"));
			u.setUsername(rels.getString("user_name"));
			u.setPassword(rels.getString("password"));
			//u.setUserType(rels.getUserType());
			}
			
			else
				System.out.println("Unable to find user with given Id");
		
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			
		}

		
		return u;
	}

	public User getUser(String username, String pass) {
		// TODO Auto-generated method stub
		User u = null;
		List<User> runner = getAllUsers();
		for (User temp : runner) {

			if (username == temp.getUsername() && pass == temp.getPassword()) {

				u = temp;
				break;
			}

		}
	
	return u;

	}

	public List<User> getAllUsers() {
		// TODO Auto-generated method stub
		
		
		List<User> users = new ArrayList<>();
		 String testin = "select * from employee";
		try 
			{
			conec = DriverManager.getConnection("jdbc:mysql://localhost:3306/revature", "root", "Okaythen12wow");
			
			stat = conec.createStatement();
			rels = stat.executeQuery(testin);
			
			
			while (rels.next())
				 {
					User nxU = new User();
					nxU.setId(rels.getInt("id"));
					nxU.setFirstName(rels.getString("first_name"));
					nxU.setLastName(rels.getString("last_name"));
					nxU.setUsername(rels.getString("user_name"));
					nxU.setPassword(rels.getString("password"));
					//nxU.setUserType(rels.getUserType());
					
					users.add(nxU);}
				}
					 catch (SQLException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
				
			return users;
		
		
	
	}

	public User updateUser(User u) {
		// TODO Auto-generated method stub
		// in driver take in all feilds but id as possible chages and set them to user u
		//take user u get it's id
		//replace existing entry with user u?
		return null;
	}

	public boolean removeUser(User u) {
		List<User> del = getAllUsers();
		int fnId = u.getId();
		User ted = getUser(fnId);
		del.remove(fnId);
		if(ted == u) {
			
			System.out.println("User Sucessfully deleted");
			return true;
		}
		System.out.println("Unable to remove user. Please check that all information is correct.");
		return false;
	}

}
